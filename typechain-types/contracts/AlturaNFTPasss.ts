/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../common";

export interface AlturaNFTPasssInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "actualizarNivel"
      | "approve"
      | "balanceOf"
      | "comprar"
      | "crearNivel"
      | "esMiembro"
      | "establecerBaseURI"
      | "expiracionDe"
      | "getApproved"
      | "isApprovedForAll"
      | "name"
      | "nivelDe"
      | "niveles"
      | "owner"
      | "ownerOf"
      | "proximoNivelId"
      | "renounceOwnership"
      | "renovar"
      | "retirar"
      | "safeTransferFrom(address,address,uint256)"
      | "safeTransferFrom(address,address,uint256,bytes)"
      | "setApprovalForAll"
      | "suministroMaximo"
      | "supportsInterface"
      | "symbol"
      | "tokenActivo"
      | "tokenURI"
      | "transferFrom"
      | "transferOwnership"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "Approval"
      | "ApprovalForAll"
      | "MembresiaComprada"
      | "MembresiaRenovada"
      | "NivelActualizado"
      | "NivelCreado"
      | "OwnershipTransferred"
      | "Retiro"
      | "Transfer"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "actualizarNivel",
    values: [BigNumberish, BigNumberish, BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "comprar",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "crearNivel",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "esMiembro",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "establecerBaseURI",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "expiracionDe",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getApproved",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "isApprovedForAll",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "nivelDe",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "niveles",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "ownerOf",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "proximoNivelId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renovar",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "retirar",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256)",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom(address,address,uint256,bytes)",
    values: [AddressLike, AddressLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setApprovalForAll",
    values: [AddressLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "suministroMaximo",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "symbol", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "tokenActivo",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURI",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [AddressLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "actualizarNivel",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "comprar", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "crearNivel", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "esMiembro", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "establecerBaseURI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "expiracionDe",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getApproved",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "nivelDe", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "niveles", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ownerOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "proximoNivelId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "renovar", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "retirar", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom(address,address,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setApprovalForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "suministroMaximo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenActivo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tokenURI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
}

export namespace ApprovalEvent {
  export type InputTuple = [
    owner: AddressLike,
    approved: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [owner: string, approved: string, tokenId: bigint];
  export interface OutputObject {
    owner: string;
    approved: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ApprovalForAllEvent {
  export type InputTuple = [
    owner: AddressLike,
    operator: AddressLike,
    approved: boolean
  ];
  export type OutputTuple = [
    owner: string,
    operator: string,
    approved: boolean
  ];
  export interface OutputObject {
    owner: string;
    operator: string;
    approved: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MembresiaCompradaEvent {
  export type InputTuple = [
    comprador: AddressLike,
    tokenId: BigNumberish,
    nivelId: BigNumberish,
    expiracion: BigNumberish
  ];
  export type OutputTuple = [
    comprador: string,
    tokenId: bigint,
    nivelId: bigint,
    expiracion: bigint
  ];
  export interface OutputObject {
    comprador: string;
    tokenId: bigint;
    nivelId: bigint;
    expiracion: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace MembresiaRenovadaEvent {
  export type InputTuple = [
    renovador: AddressLike,
    tokenId: BigNumberish,
    nivelId: BigNumberish,
    nuevaExpiracion: BigNumberish
  ];
  export type OutputTuple = [
    renovador: string,
    tokenId: bigint,
    nivelId: bigint,
    nuevaExpiracion: bigint
  ];
  export interface OutputObject {
    renovador: string;
    tokenId: bigint;
    nivelId: bigint;
    nuevaExpiracion: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NivelActualizadoEvent {
  export type InputTuple = [
    nivelId: BigNumberish,
    precioWei: BigNumberish,
    duracion: BigNumberish,
    activo: boolean
  ];
  export type OutputTuple = [
    nivelId: bigint,
    precioWei: bigint,
    duracion: bigint,
    activo: boolean
  ];
  export interface OutputObject {
    nivelId: bigint;
    precioWei: bigint;
    duracion: bigint;
    activo: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NivelCreadoEvent {
  export type InputTuple = [
    nivelId: BigNumberish,
    precioWei: BigNumberish,
    duracion: BigNumberish
  ];
  export type OutputTuple = [
    nivelId: bigint,
    precioWei: bigint,
    duracion: bigint
  ];
  export interface OutputObject {
    nivelId: bigint;
    precioWei: bigint;
    duracion: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferredEvent {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RetiroEvent {
  export type InputTuple = [a: AddressLike, monto: BigNumberish];
  export type OutputTuple = [a: string, monto: bigint];
  export interface OutputObject {
    a: string;
    monto: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferEvent {
  export type InputTuple = [
    from: AddressLike,
    to: AddressLike,
    tokenId: BigNumberish
  ];
  export type OutputTuple = [from: string, to: string, tokenId: bigint];
  export interface OutputObject {
    from: string;
    to: string;
    tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface AlturaNFTPasss extends BaseContract {
  connect(runner?: ContractRunner | null): AlturaNFTPasss;
  waitForDeployment(): Promise<this>;

  interface: AlturaNFTPasssInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  actualizarNivel: TypedContractMethod<
    [
      nivelId: BigNumberish,
      precioWei: BigNumberish,
      duracion: BigNumberish,
      activo: boolean
    ],
    [void],
    "nonpayable"
  >;

  approve: TypedContractMethod<
    [to: AddressLike, tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;

  balanceOf: TypedContractMethod<[owner: AddressLike], [bigint], "view">;

  comprar: TypedContractMethod<[nivelId: BigNumberish], [bigint], "payable">;

  crearNivel: TypedContractMethod<
    [precioWei: BigNumberish, duracion: BigNumberish],
    [bigint],
    "nonpayable"
  >;

  esMiembro: TypedContractMethod<[cuenta: AddressLike], [boolean], "view">;

  establecerBaseURI: TypedContractMethod<
    [nuevoBase: string],
    [void],
    "nonpayable"
  >;

  expiracionDe: TypedContractMethod<[arg0: BigNumberish], [bigint], "view">;

  getApproved: TypedContractMethod<[tokenId: BigNumberish], [string], "view">;

  isApprovedForAll: TypedContractMethod<
    [owner: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;

  name: TypedContractMethod<[], [string], "view">;

  nivelDe: TypedContractMethod<[arg0: BigNumberish], [bigint], "view">;

  niveles: TypedContractMethod<
    [arg0: BigNumberish],
    [
      [bigint, bigint, boolean] & {
        precioWei: bigint;
        duracion: bigint;
        activo: boolean;
      }
    ],
    "view"
  >;

  owner: TypedContractMethod<[], [string], "view">;

  ownerOf: TypedContractMethod<[tokenId: BigNumberish], [string], "view">;

  proximoNivelId: TypedContractMethod<[], [bigint], "view">;

  renounceOwnership: TypedContractMethod<[], [void], "nonpayable">;

  renovar: TypedContractMethod<[tokenId: BigNumberish], [void], "payable">;

  retirar: TypedContractMethod<
    [a: AddressLike, monto: BigNumberish],
    [void],
    "nonpayable"
  >;

  "safeTransferFrom(address,address,uint256)": TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;

  "safeTransferFrom(address,address,uint256,bytes)": TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      tokenId: BigNumberish,
      data: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  setApprovalForAll: TypedContractMethod<
    [operator: AddressLike, approved: boolean],
    [void],
    "nonpayable"
  >;

  suministroMaximo: TypedContractMethod<[], [bigint], "view">;

  supportsInterface: TypedContractMethod<
    [interfaceId: BytesLike],
    [boolean],
    "view"
  >;

  symbol: TypedContractMethod<[], [string], "view">;

  tokenActivo: TypedContractMethod<[tokenId: BigNumberish], [boolean], "view">;

  tokenURI: TypedContractMethod<[tokenId: BigNumberish], [string], "view">;

  transferFrom: TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;

  transferOwnership: TypedContractMethod<
    [newOwner: AddressLike],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "actualizarNivel"
  ): TypedContractMethod<
    [
      nivelId: BigNumberish,
      precioWei: BigNumberish,
      duracion: BigNumberish,
      activo: boolean
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "approve"
  ): TypedContractMethod<
    [to: AddressLike, tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "balanceOf"
  ): TypedContractMethod<[owner: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "comprar"
  ): TypedContractMethod<[nivelId: BigNumberish], [bigint], "payable">;
  getFunction(
    nameOrSignature: "crearNivel"
  ): TypedContractMethod<
    [precioWei: BigNumberish, duracion: BigNumberish],
    [bigint],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "esMiembro"
  ): TypedContractMethod<[cuenta: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "establecerBaseURI"
  ): TypedContractMethod<[nuevoBase: string], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "expiracionDe"
  ): TypedContractMethod<[arg0: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getApproved"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "isApprovedForAll"
  ): TypedContractMethod<
    [owner: AddressLike, operator: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "name"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "nivelDe"
  ): TypedContractMethod<[arg0: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "niveles"
  ): TypedContractMethod<
    [arg0: BigNumberish],
    [
      [bigint, bigint, boolean] & {
        precioWei: bigint;
        duracion: bigint;
        activo: boolean;
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "owner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ownerOf"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "proximoNivelId"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "renounceOwnership"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renovar"
  ): TypedContractMethod<[tokenId: BigNumberish], [void], "payable">;
  getFunction(
    nameOrSignature: "retirar"
  ): TypedContractMethod<
    [a: AddressLike, monto: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "safeTransferFrom(address,address,uint256)"
  ): TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "safeTransferFrom(address,address,uint256,bytes)"
  ): TypedContractMethod<
    [
      from: AddressLike,
      to: AddressLike,
      tokenId: BigNumberish,
      data: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setApprovalForAll"
  ): TypedContractMethod<
    [operator: AddressLike, approved: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "suministroMaximo"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "supportsInterface"
  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "symbol"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "tokenActivo"
  ): TypedContractMethod<[tokenId: BigNumberish], [boolean], "view">;
  getFunction(
    nameOrSignature: "tokenURI"
  ): TypedContractMethod<[tokenId: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "transferFrom"
  ): TypedContractMethod<
    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferOwnership"
  ): TypedContractMethod<[newOwner: AddressLike], [void], "nonpayable">;

  getEvent(
    key: "Approval"
  ): TypedContractEvent<
    ApprovalEvent.InputTuple,
    ApprovalEvent.OutputTuple,
    ApprovalEvent.OutputObject
  >;
  getEvent(
    key: "ApprovalForAll"
  ): TypedContractEvent<
    ApprovalForAllEvent.InputTuple,
    ApprovalForAllEvent.OutputTuple,
    ApprovalForAllEvent.OutputObject
  >;
  getEvent(
    key: "MembresiaComprada"
  ): TypedContractEvent<
    MembresiaCompradaEvent.InputTuple,
    MembresiaCompradaEvent.OutputTuple,
    MembresiaCompradaEvent.OutputObject
  >;
  getEvent(
    key: "MembresiaRenovada"
  ): TypedContractEvent<
    MembresiaRenovadaEvent.InputTuple,
    MembresiaRenovadaEvent.OutputTuple,
    MembresiaRenovadaEvent.OutputObject
  >;
  getEvent(
    key: "NivelActualizado"
  ): TypedContractEvent<
    NivelActualizadoEvent.InputTuple,
    NivelActualizadoEvent.OutputTuple,
    NivelActualizadoEvent.OutputObject
  >;
  getEvent(
    key: "NivelCreado"
  ): TypedContractEvent<
    NivelCreadoEvent.InputTuple,
    NivelCreadoEvent.OutputTuple,
    NivelCreadoEvent.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred"
  ): TypedContractEvent<
    OwnershipTransferredEvent.InputTuple,
    OwnershipTransferredEvent.OutputTuple,
    OwnershipTransferredEvent.OutputObject
  >;
  getEvent(
    key: "Retiro"
  ): TypedContractEvent<
    RetiroEvent.InputTuple,
    RetiroEvent.OutputTuple,
    RetiroEvent.OutputObject
  >;
  getEvent(
    key: "Transfer"
  ): TypedContractEvent<
    TransferEvent.InputTuple,
    TransferEvent.OutputTuple,
    TransferEvent.OutputObject
  >;

  filters: {
    "Approval(address,address,uint256)": TypedContractEvent<
      ApprovalEvent.InputTuple,
      ApprovalEvent.OutputTuple,
      ApprovalEvent.OutputObject
    >;
    Approval: TypedContractEvent<
      ApprovalEvent.InputTuple,
      ApprovalEvent.OutputTuple,
      ApprovalEvent.OutputObject
    >;

    "ApprovalForAll(address,address,bool)": TypedContractEvent<
      ApprovalForAllEvent.InputTuple,
      ApprovalForAllEvent.OutputTuple,
      ApprovalForAllEvent.OutputObject
    >;
    ApprovalForAll: TypedContractEvent<
      ApprovalForAllEvent.InputTuple,
      ApprovalForAllEvent.OutputTuple,
      ApprovalForAllEvent.OutputObject
    >;

    "MembresiaComprada(address,uint256,uint256,uint256)": TypedContractEvent<
      MembresiaCompradaEvent.InputTuple,
      MembresiaCompradaEvent.OutputTuple,
      MembresiaCompradaEvent.OutputObject
    >;
    MembresiaComprada: TypedContractEvent<
      MembresiaCompradaEvent.InputTuple,
      MembresiaCompradaEvent.OutputTuple,
      MembresiaCompradaEvent.OutputObject
    >;

    "MembresiaRenovada(address,uint256,uint256,uint256)": TypedContractEvent<
      MembresiaRenovadaEvent.InputTuple,
      MembresiaRenovadaEvent.OutputTuple,
      MembresiaRenovadaEvent.OutputObject
    >;
    MembresiaRenovada: TypedContractEvent<
      MembresiaRenovadaEvent.InputTuple,
      MembresiaRenovadaEvent.OutputTuple,
      MembresiaRenovadaEvent.OutputObject
    >;

    "NivelActualizado(uint256,uint96,uint32,bool)": TypedContractEvent<
      NivelActualizadoEvent.InputTuple,
      NivelActualizadoEvent.OutputTuple,
      NivelActualizadoEvent.OutputObject
    >;
    NivelActualizado: TypedContractEvent<
      NivelActualizadoEvent.InputTuple,
      NivelActualizadoEvent.OutputTuple,
      NivelActualizadoEvent.OutputObject
    >;

    "NivelCreado(uint256,uint96,uint32)": TypedContractEvent<
      NivelCreadoEvent.InputTuple,
      NivelCreadoEvent.OutputTuple,
      NivelCreadoEvent.OutputObject
    >;
    NivelCreado: TypedContractEvent<
      NivelCreadoEvent.InputTuple,
      NivelCreadoEvent.OutputTuple,
      NivelCreadoEvent.OutputObject
    >;

    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;
    OwnershipTransferred: TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;

    "Retiro(address,uint256)": TypedContractEvent<
      RetiroEvent.InputTuple,
      RetiroEvent.OutputTuple,
      RetiroEvent.OutputObject
    >;
    Retiro: TypedContractEvent<
      RetiroEvent.InputTuple,
      RetiroEvent.OutputTuple,
      RetiroEvent.OutputObject
    >;

    "Transfer(address,address,uint256)": TypedContractEvent<
      TransferEvent.InputTuple,
      TransferEvent.OutputTuple,
      TransferEvent.OutputObject
    >;
    Transfer: TypedContractEvent<
      TransferEvent.InputTuple,
      TransferEvent.OutputTuple,
      TransferEvent.OutputObject
    >;
  };
}
